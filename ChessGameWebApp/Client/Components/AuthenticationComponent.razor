@using AuthWebAPI
@using Models
@inherits AuthenticationComponentModel
@inject IAuthWebApi webApi
@inject IJSRuntime JsRuntime
@inject SiteUserInfo userInfo
@inject NavigationManager NavigationManager

<h3>Authentication</h3>

@code {

    async void FormSubmitted(EditContext editContext)
    {
        var result = await webApi.Autorization(new AccountRequestModel()
        {
                Login = Login,
                Password = Password
        });

        if (result != null)
        {
            var user = await webApi.GetUserInfo();
            userInfo.Name = user.UserName;
            userInfo.Id = user.AccountId;
            userInfo.Roles = user.Roles;
            //await JsRuntime.InvokeVoidAsync("alert", $"Token: {result.AccessToken}");
            NavigationManager.NavigateTo("/");
        }
    }
}

<EditForm Model="@this" OnValidSubmit="@FormSubmitted">
    <DataAnnotationsValidator />
    <table>
        <tr>
            <td><label for="login">Login</label></td>
            <td><input type="text" name="login" @bind-value="Login"/></td>
            <ValidationMessage For=@(() => Login) />
            </tr>
            <tr>
                <td><label for="password">Password</label></td>
                <td><input type="password" name="password" @bind-value="Password"/></td>
                <ValidationMessage For=@(() => Password) />
            </tr>
            <tr>
                <td>
                    <input class="btn btn-primary" type="submit" value="Login" />
                    <NavLink class="btn btn-secondary" type="button" href="authorization/reg">Register</NavLink>
                </td>
            </tr>
      </table>
</EditForm>