@using ChessGameWebApp.Shared
@inject ChessWebAPI.ServerWebApi webApi
@page "/auth"

@code {
    private bool isRegistration = false;

    private void ToRegistration() => isRegistration = true;
    private void ToLogin() => isRegistration = false;
    AuthModel authModel = new();
    private ValidationMessageStore messageStore;

    private void HandleValidSubmit()
    {

    }


    string LastSubmitResult;
    async void FormSubmitted(EditContext editContext)
    {
        bool formIsValid = editContext.Validate();
        //if (formIsValid)
        {
            await webApi.Registration(new ChessWebAPI.AccountRequestModel()
                {
                    Username = authModel.Username,
                    Login = authModel.Login,
                    Password = authModel.Password,
                    Email = authModel.Email
                });

            var accounts = await webApi.GetAccounts();
        }
    }

}

<div>
    @if (isRegistration)
    {
        <h2>Registration</h2>
    }
    else
    {
        <h2>Login</h2>
    }
    <EditForm Model="@authModel" OnSubmit="@FormSubmitted" Method="Post">
        <DataAnnotationsValidator/>
        <table>
            
            @if (isRegistration)
            {
                <tr>
                    <td><label for="login">Login</label></td>
                    <td><input type="text" name="login" @bind-value="authModel.Login"/></td>
                    <ValidationMessage For=@(() => authModel.Login) />
                </tr>
                <tr>
                    <td><label for="username">Username</label></td>
                    <td><input type="text" name="username" @bind-value="authModel.Username"/></td>
                    <ValidationMessage For=@(() => authModel.Username) />
                </tr>
                <tr>
                    <td><label for="email">E-mail</label></td>
                    <td><input type="text" name="email" @bind-value="authModel.Email"/></td>
                    <ValidationMessage For=@(() => authModel.Email) />
                </tr>
                <tr>
                    <td><label for="password">Password</label></td>
                    <td><input type="password" name="password" @bind-value="authModel.Password"/></td>
                    <ValidationMessage For=@(() => authModel.Password) />
                </tr>
                <tr>
                    <td><label for="confirm">Confirm</label></td>
                    <td><input type="password" name="confirm" @bind-value="authModel.Confirm"/></td>
                    <ValidationMessage For=@(() => authModel.Confirm) />
                </tr>
            }
            else
            {
                <tr>
                    <td><label for="login">Login</label></td>
                    <td><input type="text" name="login" @bind-value="authModel.Login"/></td>
                    <ValidationMessage For=@(() => authModel.Login) />
                </tr>
                <tr>
                    <td><label for="password">Password</label></td>
                    <td><input type="password" name="password" @bind-value="authModel.Password"/></td>
                    <ValidationMessage For=@(() => authModel.Password) />
                </tr>
            }
            @if (isRegistration)
            {
                <tr>
                    <td>
                        <input class="btn btn-secondary" type="button" value="Login" @onclick="ToLogin"/>
                        <input class="btn btn-primary" type="submit" value="Register" actio/>
                    </td>
                </tr>
            }
            else
            {
                <tr>
                    <td>
                        <input class="btn btn-primary" type="submit" value="Login" />
                        <input class="btn btn-secondary" type="button" @onclick="ToRegistration" value="Register"/>
                    </td>
                </tr>
            }
        </table>
    </EditForm>
</div>
